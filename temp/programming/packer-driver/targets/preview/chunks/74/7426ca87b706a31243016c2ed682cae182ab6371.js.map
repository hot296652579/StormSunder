{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/easy_ui_framework/waiting/UIWaiting.ts"],"names":["UIWaiting","UIController","UIMgr","loadingTxtArr","_inst","onCreated","show","inst","showUI","hide","onUpdate","layout","loadingIcon","euler","eulerAngles","rot","Date","now","setRotationFromEuler","x","y","loadingTxt","idx","Math","floor","string","onDispose"],"mappings":";;;mDASaA,S;;;;;;;;;;;;;;;;;;;;;;AARJC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;AAGHC,MAAAA,a,GAAgB,CAAC,UAAD,EAAY,WAAZ,EAAwB,YAAxB,C;AAElBC,MAAAA,K,GAAQ,I;;2BAECJ,S,GAAN,MAAMA,SAAN;AAAA;AAAA,wCAAoC;AAE7BK,QAAAA,SAAS,GAAS,CAE3B;;AAEiB,eAAJC,IAAI,GAAY;AAC1B,cAAGF,KAAH,EAAS;AACL,mBAAOA,KAAP;AACH;;AACDA,UAAAA,KAAK,GAAG;AAAA;AAAA,8BAAMG,IAAN,CAAWC,MAAX,CAAmBR,SAAnB,CAAR;AACA,iBAAOI,KAAP;AACH;;AAEiB,eAAJK,IAAI,GAAO;AACrB,cAAGL,KAAH,EAAS;AACLA,YAAAA,KAAK,CAACK,IAAN;;AACAL,YAAAA,KAAK,GAAG,IAAR;AACH;AACJ;;AAESM,QAAAA,QAAQ,GAAG;AACjB,cAAIC,MAAM,GAAG,KAAKA,MAAlB;;AACA,cAAGA,MAAM,CAACC,WAAV,EAAsB;AAClB,gBAAIC,KAAK,GAAGF,MAAM,CAACC,WAAP,CAAmBE,WAA/B;AACA,gBAAIC,GAAG,GAAIC,IAAI,CAACC,GAAL,KAAa,IAAd,GAAsB,EAAhC;AACAN,YAAAA,MAAM,CAACC,WAAP,CAAmBM,oBAAnB,CAAwCL,KAAK,CAACM,CAA9C,EAAgDN,KAAK,CAACO,CAAtD,EAAwDL,GAAxD;AACH;;AAED,cAAGJ,MAAM,CAACU,UAAV,EAAqB;AACjB,gBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACC,GAAL,KAAa,GAAxB,IAA+B,CAAzC;AACAN,YAAAA,MAAM,CAACU,UAAP,CAAkBI,MAAlB,GAA2BtB,aAAa,CAACmB,GAAD,CAAxC;AACH;AACJ;;AAEDI,QAAAA,SAAS,GAAE;AACPtB,UAAAA,KAAK,GAAG,IAAR;AACH;;AArCsC,O","sourcesContent":["\nimport { UIController } from \"../UIController\";\nimport { UIMgr } from \"../UIMgr\";\nimport { Layout_UIWaiting } from \"./Layout_UIWaiting\";\n\nconst loadingTxtArr = ['Loading.','Loading..','Loading...'];\n\nlet _inst = null;\n\nexport class UIWaiting extends UIController{\n\n    protected onCreated(): void {\n        \n    }\n\n    public static show():UIWaiting{\n        if(_inst){\n            return _inst;\n        }\n        _inst = UIMgr.inst.showUI((UIWaiting));\n        return _inst;\n    }\n\n    public static hide():void{\n        if(_inst){\n            _inst.hide();\n            _inst = null;\n        }\n    }\n\n    protected onUpdate() { \n        let layout = this.layout as Layout_UIWaiting;\n        if(layout.loadingIcon){\n            let euler = layout.loadingIcon.eulerAngles;\n            let rot = (Date.now() / 1000) * 90;\n            layout.loadingIcon.setRotationFromEuler(euler.x,euler.y,rot);\n        }\n\n        if(layout.loadingTxt){\n            let idx = Math.floor(Date.now() / 500) % 3;\n            layout.loadingTxt.string = loadingTxtArr[idx];\n        }\n    }\n\n    onDispose(){\n        _inst = null;\n    }\n}"]}