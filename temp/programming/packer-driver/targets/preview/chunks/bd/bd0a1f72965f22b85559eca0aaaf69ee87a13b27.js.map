{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/easy_adapter/AdapterSprite.ts"],"names":["Enum","Sprite","UITransform","v3","Widget","_decorator","EDITOR","Adapter","ccclass","property","executeInEditMode","menu","SpriteScaleType","SpriteAlignType","AdapterSprite","type","tooltip","_scaleType","SUIT","_alignType","CENTER","_sprite","scaleType","value","updateSprite","alignType","onLoad","node","getComponent","start","onChangeSize","enabled","spriteFrame","widget","parent","updateAlignment","width","rect","height","trans","parentTrans","scale","FILL","setPosition","LEFT","x","RIGHT","TOP","BOTTOM","doOnAdapterComplete"],"mappings":"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","sourcesContent":["import { Enum, Sprite, UITransform, v3, Widget, _decorator } from \"cc\";\r\nimport { EDITOR } from \"cc/env\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nconst { ccclass, property , executeInEditMode,menu} = _decorator;\r\n\r\n/**\r\n * 缩放方式\r\n */\r\nexport enum SpriteScaleType {\r\n    /**\r\n     * 缩放到填满父节点（如果父节点有裁剪，图像可能会被裁剪，节点可能会超出父节点）\r\n     */\r\n    FILL,\r\n\r\n    /**\r\n     * 缩放到刚好在父节点内部最大化显示（图像会完整显示，但父节点上下或者左右可能会留空）\r\n     */\r\n    SUIT,\r\n}\r\n\r\n/**\r\n * 对齐方式\r\n */\r\nexport enum SpriteAlignType {\r\n    /**\r\n     * 缩放后靠左对齐\r\n     */\r\n    LEFT,\r\n\r\n    /**\r\n     * 缩放后靠上对齐\r\n     */\r\n    TOP,\r\n\r\n    /**\r\n     * 缩放后靠右对齐\r\n     */\r\n    RIGHT,\r\n\r\n    /**\r\n     * 缩放后靠下对齐\r\n     */\r\n    BOTTOM,\r\n\r\n    /**\r\n     * 缩放后居中对齐\r\n     */\r\n    CENTER,\r\n}\r\n\r\n/**\r\n * Sprite 适配组件\r\n *\r\n * @author caizhitao\r\n * @created 2020-12-27 21:22:43\r\n */\r\n@ccclass(\"AdapterSprite\")\r\n@executeInEditMode(true)\r\n@menu(\"Quick适配组件/AdapterSprite\")\r\nexport default class AdapterSprite extends Adapter {\r\n    @property({\r\n        type: Enum(SpriteScaleType),\r\n        tooltip: `缩放类型:\r\n        -FILL: 缩放到填满父节点（如果父节点有裁剪，图像可能会被裁剪，节点可能会超出父节点）\r\n        -SUIT: 缩放到刚好在父节点内部最大化显示（图像会完整显示，但父节点上下或者左右可能会留空）`,\r\n    })\r\n    get scaleType(){\r\n        return this._scaleType;\r\n    }\r\n    set scaleType(value){\r\n        this._scaleType = value;\r\n        if ( EDITOR ){\r\n            this.updateSprite(this._scaleType,this.alignType);\r\n        }\r\n    }\r\n    private _scaleType: SpriteScaleType = SpriteScaleType.SUIT;\r\n\r\n    @property({\r\n        type: Enum(SpriteAlignType),\r\n        tooltip: `齐方式类型:\r\n        -LEFT: 缩放后靠左对齐\r\n        -TOP: 缩放后靠上对齐\r\n        -RIGHT: 缩放后靠右对齐\r\n        -BOTTOM: 缩放后靠下对齐\r\n        -CENTER: 缩放后居中对齐`,\r\n    })\r\n    get alignType(){\r\n        return this._alignType;\r\n    }\r\n    set alignType(value){\r\n        this._alignType = value;\r\n        if ( EDITOR ){\r\n            this.updateSprite(this._scaleType,this._alignType);\r\n        }\r\n    }\r\n    private _alignType: SpriteAlignType = SpriteAlignType.CENTER;\r\n\r\n    private _sprite: Sprite = null!;\r\n\r\n    onLoad() {\r\n        this._sprite = this.node.getComponent(Sprite) as Sprite;\r\n    }\r\n\r\n    start() {\r\n        this.updateSprite(this.scaleType, this.alignType);\r\n    }\r\n\r\n    protected onChangeSize() {\r\n        this.updateSprite(this.scaleType, this.alignType);\r\n    }\r\n\r\n    updateSprite(scaleType: SpriteScaleType, alignType: SpriteAlignType) {\r\n        if (!this._sprite || !this._sprite.enabled || !this._sprite.spriteFrame) {\r\n            return;\r\n        }\r\n        let widget = this.node.parent?.getComponent(Widget);\r\n        if (widget) {\r\n            widget.updateAlignment();\r\n        }\r\n        this.width = this._sprite.spriteFrame.rect.width;\r\n        this.height = this._sprite.spriteFrame.rect.height;\r\n        let trans = this.parentTrans;\r\n        if (this.width / this.height > trans.width / trans.height) {\r\n            // 设计分辨率宽高比大于显示分辨率\r\n            if (scaleType == SpriteScaleType.SUIT) {\r\n                let scale = trans.width / this.width;\r\n                this.node.scale = v3(scale,scale);\r\n            } else if (scaleType == SpriteScaleType.FILL) {\r\n                let scale = trans.height / this.height;\r\n                this.node.scale = v3(scale,scale);\r\n            }\r\n        } else {\r\n            // 设计分辨率宽高比小于显示分辨率\r\n            if (scaleType == SpriteScaleType.SUIT) {\r\n                let scale = trans.height / this.height;\r\n                this.node.scale = v3(scale,scale);\r\n            } else if (scaleType == SpriteScaleType.FILL) {\r\n                let scale = trans.width / this.width;\r\n                this.node.scale = v3(scale,scale);\r\n            }\r\n        }\r\n\r\n        switch (alignType) {\r\n            case SpriteAlignType.CENTER:\r\n                this.node.setPosition(v3());\r\n                break;\r\n            case SpriteAlignType.LEFT:\r\n                this.node.setPosition(v3(-0.5 * (trans.width - this.width * this.node.scale.x), 0));\r\n                break;\r\n            case SpriteAlignType.RIGHT:\r\n                this.node.setPosition(v3(0.5 * (trans.width - this.width * this.node.scale.x), 0));\r\n                break;\r\n            case SpriteAlignType.TOP:\r\n                this.node.setPosition(v3(0, 0.5 * (trans.height - this.height * this.node.scale.x)));\r\n                break;\r\n            case SpriteAlignType.BOTTOM:\r\n                this.node.setPosition(v3(0, -0.5 * (trans.height - this.height * this.node.scale.x)));\r\n                break;\r\n        }\r\n        this.doOnAdapterComplete();\r\n    }\r\n\r\n    private get parentTrans(){\r\n        return this.node.parent?.getComponent(UITransform) as UITransform\r\n    }\r\n}\r\n"]}