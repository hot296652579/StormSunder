{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/module_storm_sunder/Script/ExpUserUI.ts"],"names":["Component","Label","_decorator","EventDispatcher","GameEvent","ccclass","property","ExpUserUI","start","registerEvent","instance","on","EVENT_UPDATE_USER_EXP","onUpdateUserExp","args","exp","maxExp","lbExp","string","onDestroy","rigisterEvent","off"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAiBA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAA4BC,MAAAA,U,OAAAA,U;;AAE/CC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAE9B;AACA;AACA;;2BAEaK,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ,CAACL,KAAD,C,2BAHb,MACaM,SADb,SAC+BP,SAD/B,CACyC;AAAA;AAAA;;AAAA;AAAA;;AAM3BQ,QAAAA,KAAK,GAAS;AACpB,eAAKC,aAAL;AACH;;AAEOA,QAAAA,aAAa,GAAG;AACpB;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,EAAzB,CAA4B;AAAA;AAAA,sCAAUC,qBAAtC,EAA6D,KAAKC,eAAlE,EAAmF,IAAnF;AACH;;AAEOA,QAAAA,eAAe,CAACC,IAAD,EAAY;AAC/B,cAAIC,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAd;AACA,cAAIE,MAAM,GAAGF,IAAI,CAAC,CAAD,CAAjB;AACA,eAAKG,KAAL,CAAWC,MAAX,GAAoBH,GAAG,GAAG,GAAN,GAAYC,MAAhC;AACH;;AAESG,QAAAA,SAAS,GAAS;AACxB,eAAKC,aAAL;AACH;;AAEOA,QAAAA,aAAa,GAAG;AACpB;AAAA;AAAA,kDAAgBV,QAAhB,CAAyBW,GAAzB,CAA6B;AAAA;AAAA,sCAAUT,qBAAvC,EAA8D,KAAKC,eAAnE,EAAoF,IAApF;AACH;;AA1BoC,O;;;;;iBAGtB,I","sourcesContent":["import { Button, Component, Label, Node, NodeEventType, _decorator, find } from 'cc';\r\nimport { AttributeBonusMgr } from './Manager/AttributeBonusMgr';\r\nimport { EventDispatcher } from '../../core_tgx/easy_ui_framework/EventDispatcher';\r\nimport { GameEvent } from './Enum/GameEvent';\r\nimport { GameUtil } from './GameUtil';\r\nimport { PlayerMgr } from './Manager/PlayerMgr';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n *游戏玩家经验UI\r\n */\r\n@ccclass('ExpUserUI')\r\nexport class ExpUserUI extends Component {\r\n\r\n    @property(Label)\r\n    lbExp: Label = null;\r\n\r\n\r\n    protected start(): void {\r\n        this.registerEvent();\r\n    }\r\n\r\n    private registerEvent() {\r\n        EventDispatcher.instance.on(GameEvent.EVENT_UPDATE_USER_EXP, this.onUpdateUserExp, this);\r\n    }\r\n\r\n    private onUpdateUserExp(args: any) {\r\n        let exp = args[0];\r\n        let maxExp = args[1];\r\n        this.lbExp.string = exp + \"/\" + maxExp;\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.rigisterEvent();\r\n    }\r\n\r\n    private rigisterEvent() {\r\n        EventDispatcher.instance.off(GameEvent.EVENT_UPDATE_USER_EXP, this.onUpdateUserExp, this);\r\n    }\r\n\r\n}\r\n"]}