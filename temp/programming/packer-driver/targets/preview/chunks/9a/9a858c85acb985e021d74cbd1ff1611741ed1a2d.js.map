{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/easy_controller/CharacterMovement2D.ts"],"names":["_decorator","Component","Vec2","v2","EasyController","EasyControllerEvent","ccclass","property","tempV2","CharacterMovement2D","_moveFactor","_moveDir","start","on","MOVEMENT","onMovement","MOVEMENT_STOP","onMovementStop","moveDir","realSpeed","moveSpeed","degree","strengthen","angle","Math","PI","needRotation","node","setRotationFromEuler","set","cos","sin","normalize","onDestroy","off","update","deltaTime","multiplyScalar","pos","position","setPosition","x","y","z"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,E,OAAAA,E;;AACnCC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,mB,iBAAAA,mB;;;;;;;;;OACnB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAExBQ,MAAAA,M,GAASL,EAAE,E;;qCAGJM,mB,WADZH,OAAO,CAAC,wBAAD,C,2BAAR,MACaG,mBADb,SACyCR,SADzC,CACmD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAYvCS,WAZuC,GAYjB,CAZiB;AAAA,eAavCC,QAbuC,GAatBR,EAAE,CAAC,CAAD,EAAI,CAAJ,CAboB;AAAA;;AAO/CS,QAAAA,KAAK,GAAG;AACJ;AAAA;AAAA,gDAAeC,EAAf,CAAkB;AAAA;AAAA,0DAAoBC,QAAtC,EAAgD,KAAKC,UAArD,EAAiE,IAAjE;AACA;AAAA;AAAA,gDAAeF,EAAf,CAAkB;AAAA;AAAA,0DAAoBG,aAAtC,EAAqD,KAAKC,cAA1D,EAA0E,IAA1E;AACH;;AAKiB,YAAPC,OAAO,GAAO;AACrB,iBAAO,KAAKP,QAAZ;AACH;;AAEmB,YAATQ,SAAS,GAAS;AACzB,iBAAO,KAAKC,SAAL,GAAiB,KAAKV,WAA7B;AACH;;AAEDK,QAAAA,UAAU,CAACM,MAAD,EAASC,UAAT,EAAqB;AAC3B,cAAIC,KAAK,GAAGF,MAAM,GAAG,GAAT,GAAeG,IAAI,CAACC,EAAhC;;AACA,cAAG,KAAKC,YAAR,EAAqB;AACjB,iBAAKC,IAAL,CAAUC,oBAAV,CAA+B,CAA/B,EAAkC,CAAlC,EAAqCP,MAArC;AACH;;AACD,eAAKV,QAAL,CAAckB,GAAd,CAAkBL,IAAI,CAACM,GAAL,CAASP,KAAT,CAAlB,EAAmCC,IAAI,CAACO,GAAL,CAASR,KAAT,CAAnC;;AACA,eAAKZ,QAAL,CAAcqB,SAAd;;AACA,eAAKtB,WAAL,GAAmBY,UAAnB;AACH;;AAEDL,QAAAA,cAAc,GAAG;AACb,eAAKP,WAAL,GAAmB,CAAnB;AACH;;AAEDuB,QAAAA,SAAS,GAAG;AACR;AAAA;AAAA,gDAAeC,GAAf,CAAmB;AAAA;AAAA,0DAAoBpB,QAAvC,EAAiD,KAAKC,UAAtD,EAAkE,IAAlE;AACA;AAAA;AAAA,gDAAemB,GAAf,CAAmB;AAAA;AAAA,0DAAoBlB,aAAvC,EAAsD,KAAKC,cAA3D,EAA2E,IAA3E;AACH;;AAGDkB,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAI,KAAK1B,WAAT,EAAsB;AAClBR,YAAAA,IAAI,CAACmC,cAAL,CAAoB7B,MAApB,EAA4B,KAAKG,QAAjC,EAA2C,KAAKQ,SAAL,GAAiBiB,SAA5D;AACA,gBAAIE,GAAG,GAAG,KAAKX,IAAL,CAAUY,QAApB;AACA,iBAAKZ,IAAL,CAAUa,WAAV,CAAsBF,GAAG,CAACG,CAAJ,GAAQjC,MAAM,CAACiC,CAArC,EAAwCH,GAAG,CAACI,CAAJ,GAAQlC,MAAM,CAACkC,CAAvD,EAA0DJ,GAAG,CAACK,CAA9D;AACH;AACJ;;AAjD8C,O,4EAC9CpC,Q;;;;;iBACmB,G;;uFAEnBA,Q;;;;;iBACsB,K","sourcesContent":["import { _decorator, Component, Node, Vec2, v2, Prefab, Vec3 } from 'cc';\nimport { EasyController, EasyControllerEvent } from './EasyController';\nconst { ccclass, property } = _decorator;\n\nconst tempV2 = v2();\n\n@ccclass('tgxCharacterMovement2D')\nexport class CharacterMovement2D extends Component {\n    @property\n    moveSpeed: number = 100;\n\n    @property\n    needRotation:boolean = false;\n\n    start() {\n        EasyController.on(EasyControllerEvent.MOVEMENT, this.onMovement, this);\n        EasyController.on(EasyControllerEvent.MOVEMENT_STOP, this.onMovementStop, this);\n    }\n\n    private _moveFactor: number = 0;\n    private _moveDir: Vec2 = v2(1, 0);\n\n    public get moveDir():Vec2{\n        return this._moveDir;\n    }\n\n    public get realSpeed():number{\n        return this.moveSpeed * this._moveFactor;\n    }\n\n    onMovement(degree, strengthen) {\n        let angle = degree / 180 * Math.PI;\n        if(this.needRotation){\n            this.node.setRotationFromEuler(0, 0, degree);\n        }\n        this._moveDir.set(Math.cos(angle), Math.sin(angle));\n        this._moveDir.normalize();\n        this._moveFactor = strengthen;\n    }\n\n    onMovementStop() {\n        this._moveFactor = 0;\n    }\n\n    onDestroy() {\n        EasyController.off(EasyControllerEvent.MOVEMENT, this.onMovement, this);\n        EasyController.off(EasyControllerEvent.MOVEMENT_STOP, this.onMovementStop, this);\n    }\n\n\n    update(deltaTime: number) {\n        if (this._moveFactor) {\n            Vec2.multiplyScalar(tempV2, this._moveDir, this.realSpeed * deltaTime);\n            let pos = this.node.position;\n            this.node.setPosition(pos.x + tempV2.x, pos.y + tempV2.y, pos.z);\n        }\n    }\n}"]}