{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/module_storm_sunder/Script/Manager/AttributeBonusMgr.ts"],"names":["AttributeBonusMgr","DevelopConfigModel","UserModel","MainConfigModel","AiConfigModel","EventDispatcher","GameEvent","userModel","developConfig","aiConfig","mainConfig","inst","_instance","initilize","initialize","addMoney","money","instance","emit","EVENT_UPDATE_USER_MONEY","checkMoneyEnough","cost","userMoney","consumeMoney","updateBonus","type","bonus","bonusData","level","upgradeCost","getUpgradeCost","config","getConfigById","money_growth","getBonus","isAI","base","up_value","finialLevel","aiRange","game_ai_range","randomOffset","Math","floor","random","newLv","getExpNeed","getStormSunderAttack","lv","external_attack","BonusType","ATTACK","game_attack_base","game_lv_attack_up","getStormSunderSpeed","external_speed","SPEED","game_speed_base","game_lv_speed_up","getStormSunderExp","game_absorbec_exp_base","game_lv_absorbec_exp_up","getExpBonus","exp","expProgress","EXP"],"mappings":"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","sourcesContent":["import { Tableai_config } from \"db://assets/module_basic/table/Tableai_config\";\r\nimport { DevelopConfigModel } from \"../Model/DevelopConfigModel\";\r\nimport { UserModel } from \"../Model/UserModel\";\r\nimport { MainConfigModel } from \"../Model/MainConfigModel\";\r\nimport { AiConfigModel } from \"../Model/AiConfigModel\";\r\nimport { EventDispatcher } from \"db://assets/core_tgx/easy_ui_framework/EventDispatcher\";\r\nimport { GameEvent } from \"../Enum/GameEvent\";\r\n\r\n/** 属性加成管理器*/\r\nexport class AttributeBonusMgr {\r\n    private static _instance: AttributeBonusMgr;\r\n    public static get inst(): AttributeBonusMgr {\r\n        if (this._instance == null) {\r\n            this._instance = new AttributeBonusMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    userModel: UserModel;\r\n    developConfig: DevelopConfigModel;\r\n    aiConfig: AiConfigModel;\r\n    mainConfig: MainConfigModel;\r\n\r\n    initilize() {\r\n        this.userModel = new UserModel();\r\n        this.mainConfig = new MainConfigModel();\r\n        this.developConfig = new DevelopConfigModel();\r\n        this.aiConfig = new AiConfigModel();\r\n        this.userModel.initialize();\r\n    }\r\n\r\n    /** 用户增加金额*/\r\n    public addMoney(money: number) {\r\n        this.userModel.money += money;\r\n        EventDispatcher.instance.emit(GameEvent.EVENT_UPDATE_USER_MONEY);\r\n    }\r\n\r\n    /**\r\n     * 检查用户金额是否足够\r\n     * @param cost 需要消耗的金额\r\n     * @returns boolean\r\n     */\r\n    public checkMoneyEnough(cost: number): boolean {\r\n        const userMoney = this.userModel.money;\r\n        return userMoney >= cost;\r\n    }\r\n\r\n    /**\r\n     * 扣除用户金额\r\n     * @param cost 需要扣除的金额\r\n     * @returns boolean 扣除是否成功\r\n     */\r\n    public consumeMoney(cost: number): boolean {\r\n        if (!this.checkMoneyEnough(cost)) {\r\n            return false;\r\n        }\r\n\r\n        this.userModel.money -= cost;\r\n        EventDispatcher.instance.emit(GameEvent.EVENT_UPDATE_USER_MONEY);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 更新对应类型的加成数据\r\n     * @param type 加成类型\r\n     */\r\n    public updateBonus(type: BonusType): void {\r\n        const bonus = this.userModel.bonusData[type];\r\n        if (!bonus) return;\r\n\r\n        // 更新等级和升级消耗\r\n        this.userModel.bonusData[type] = {\r\n            ...bonus,\r\n            level: bonus.level,\r\n            upgradeCost: bonus.upgradeCost\r\n        };\r\n    }\r\n\r\n    /** 获取配置升级消耗增加金额*/\r\n    public getUpgradeCost(type: BonusType): number {\r\n        const config = this.developConfig.getConfigById(type);\r\n        if (!config) return 0;\r\n        return config.money_growth\r\n    }\r\n\r\n    /** 获取类型最终属性加成*/\r\n    public getBonus(type: BonusType, isAI?: boolean): number {\r\n        const { level, base, up_value } = this.userModel.bonusData[type];\r\n        let finialLevel = 1;\r\n        if (!isAI) {\r\n            finialLevel = level;\r\n        } else {\r\n            const aiRange = this.userModel.game_ai_range;\r\n            const randomOffset = Math.floor(Math.random() * (aiRange[1] - aiRange[0] + 1)) + aiRange[0];\r\n            const newLv = level + randomOffset;\r\n            finialLevel = newLv < 0 ? 3 : newLv; // 如果计算结果小于 0，则返回 3\r\n        }\r\n        return base + (finialLevel - 1) * up_value;\r\n    }\r\n\r\n    /** 升级需要的经验*/\r\n    public getExpNeed(level: number): number {\r\n        return 25 * (level * level - level + 2);\r\n    }\r\n\r\n    /** 计算玩家龙卷风攻击力*/\r\n    public getStormSunderAttack(lv: number, isAI?: boolean): number {\r\n        const external_attack = this.getBonus(BonusType.ATTACK, isAI);\r\n        const game_attack_base = this.userModel.game_attack_base;\r\n        const game_lv_attack_up = this.userModel.game_lv_attack_up;\r\n        return external_attack + game_attack_base + game_lv_attack_up * lv;\r\n    }\r\n\r\n    /** 计算玩家龙卷风速度*/\r\n    public getStormSunderSpeed(lv: number, isAI?: boolean): number {\r\n        const external_speed = this.getBonus(BonusType.SPEED, isAI);\r\n        const game_speed_base = this.userModel.game_speed_base;\r\n        const game_lv_speed_up = this.userModel.game_lv_speed_up;\r\n        return external_speed + game_speed_base + game_lv_speed_up * lv;\r\n    }\r\n\r\n    /** 被吃掉提供的经验值*/\r\n    public getStormSunderExp(lv: number): number {\r\n        const game_absorbec_exp_base = this.userModel.game_absorbec_exp_base;\r\n        const game_lv_absorbec_exp_up = this.userModel.game_lv_absorbec_exp_up;\r\n        return game_absorbec_exp_base + game_lv_absorbec_exp_up * lv;\r\n    }\r\n\r\n    /** 经验加成后最终值*/\r\n    public getExpBonus(exp: number, isAI?: boolean): number {\r\n        const expProgress = Math.floor(this.getBonus(BonusType.EXP, isAI) / 100);\r\n        return exp * (1 + expProgress);\r\n    }\r\n}\r\n\r\n//属性加成类型\r\nexport enum BonusType {\r\n    ATTACK = 1,\r\n    SPEED = 2,\r\n    EXP = 3,\r\n}"]}