{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/module_storm_sunder/Script/Manager/TimerMgr.ts"],"names":["TimerMgr","director","Scheduler","Label","StormSunderGlobalInstance","PropMgr","GameMgr","GameStatus","GameUtil","Instance","_instance","inst","constructor","countDownTime","timerId","propMgr","startCountdown","upateLbTime","setInterval","stopCountdown","console","log","enableForTarget","getScheduler","schedule","update","battleUI","instance","lbTime","getChildByPath","format","formatToTimeString","getComponent","string","clearInterval","isWin","setGameStatus","End","dt","destroy","unscheduleUpdate"],"mappings":";;;8KAQaA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAR0EC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;;AAEnGC,MAAAA,yB,iBAAAA,yB;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,O,iBAAAA,O;AAASC,MAAAA,U,iBAAAA,U;;AACTC,MAAAA,Q,iBAAAA,Q;;;;;;;6JAF4B;;;AAIrC;0BACaR,Q,GAAN,MAAMA,QAAN,CAAe;AAEQ,mBAARS,QAAQ,GAAa;AACnC,cAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxB,iBAAKA,SAAL,GAAiB,IAAIV,QAAJ,EAAjB;AACH;;AACD,iBAAO,KAAKU,SAAZ;AACH;;AAEqB,mBAAJC,IAAI,GAAa;AAC/B,iBAAO,KAAKF,QAAZ;AACH;;AAMDG,QAAAA,WAAW,GAAG;AAAA,eAJPC,aAIO,GAJiB,GAIjB;AAAA,eAHNC,OAGM,GAHY,CAGZ;AAAA,eAFNC,OAEM;AACV,eAAKA,OAAL,GAAe;AAAA;AAAA,kCAAQN,QAAvB,CADU,CACuB;AACpC,SAnBiB,CAqBlB;;;AACOO,QAAAA,cAAc,GAAS;AAC1B,eAAKC,WAAL;AACA,eAAKH,OAAL,GAAeI,WAAW,CAAC,MAAM;AAC7B,iBAAKL,aAAL;;AACA,gBAAI,KAAKA,aAAL,IAAsB,CAA1B,EAA6B;AACzB,mBAAKM,aAAL;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AACD,iBAAKJ,WAAL;AACH,WAPyB,EAOvB,IAPuB,CAA1B,CAF0B,CAShB;;AAEVf,UAAAA,SAAS,CAACoB,eAAV,CAA0B,IAA1B;AACArB,UAAAA,QAAQ,CAACsB,YAAT,GAAwBC,QAAxB,CAAiC,KAAKC,MAAtC,EAA8C,IAA9C,EAAoD,CAApD;AACH;;AAEOR,QAAAA,WAAW,GAAG;AAClB,cAAMS,QAAQ,GAAG;AAAA;AAAA,sEAA0BC,QAA1B,CAAmCD,QAApD;AACA,cAAME,MAAM,GAAGF,QAAQ,CAACG,cAAT,CAAwB,cAAxB,CAAf,CAFkB,CAGlB;;AACA,cAAMC,MAAM,GAAG;AAAA;AAAA,oCAASC,kBAAT,CAA4B,KAAKlB,aAAjC,CAAf;AACAe,UAAAA,MAAM,CAACI,YAAP,CAAoB7B,KAApB,EAA2B8B,MAA3B,GAAoCH,MAApC;AACH,SA3CiB,CA6ClB;;;AACQX,QAAAA,aAAa,GAAS;AAC1B,cAAI,KAAKL,OAAT,EAAkB;AACdoB,YAAAA,aAAa,CAAC,KAAKpB,OAAN,CAAb;AACA,iBAAKA,OAAL,GAAe,CAAf;AACA;AAAA;AAAA,oCAAQH,IAAR,CAAawB,KAAb,GAAqB,IAArB;AACA;AAAA;AAAA,oCAAQxB,IAAR,CAAayB,aAAb,CAA2B;AAAA;AAAA,0CAAWC,GAAtC;AACH;AACJ,SArDiB,CAuDlB;;;AACOZ,QAAAA,MAAM,CAACa,EAAD,EAAmB;AAC5B,eAAKvB,OAAL,CAAaU,MAAb,CAAoBa,EAApB;AACH,SA1DiB,CA4DlB;;;AACOC,QAAAA,OAAO,GAAS;AACnB,eAAKpB,aAAL;AACAlB,UAAAA,QAAQ,CAACsB,YAAT,GAAwBiB,gBAAxB,CAAyC,IAAzC;AACH;;AAhEiB,O;;AAATxC,MAAAA,Q,CACMU,S","sourcesContent":["import { assetManager, instantiate, Prefab, Node, UITransform, Vec3, Vec2, view, game, director, Scheduler, Label } from \"cc\";\r\nimport { resLoader } from \"db://assets/core_tgx/base/ResLoader\";\r\nimport { StormSunderGlobalInstance } from \"../StormSunderGlobalInstance\";\r\nimport { PropMgr } from \"./PropMgr\"; // 假设PropMgr在同一个目录下\r\nimport { GameMgr, GameStatus } from \"./GameMgr\";\r\nimport { GameUtil } from \"../GameUtil\";\r\n\r\n/** 时间管理器*/\r\nexport class TimerMgr {\r\n    private static _instance: TimerMgr;\r\n    public static get Instance(): TimerMgr {\r\n        if (this._instance == null) {\r\n            this._instance = new TimerMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public static get inst(): TimerMgr {\r\n        return this.Instance;\r\n    }\r\n\r\n    public countDownTime: number = 300;\r\n    private timerId: number = 0;\r\n    private propMgr: PropMgr;\r\n\r\n    constructor() {\r\n        this.propMgr = PropMgr.Instance; // 初始化PropMgr实例\r\n    }\r\n\r\n    // 开始倒计时\r\n    public startCountdown(): void {\r\n        this.upateLbTime();\r\n        this.timerId = setInterval(() => {\r\n            this.countDownTime--;\r\n            if (this.countDownTime <= 0) {\r\n                this.stopCountdown();\r\n                console.log(\"Countdown finished!\");\r\n            }\r\n            this.upateLbTime();\r\n        }, 1000); // 每秒减少一次\r\n\r\n        Scheduler.enableForTarget(this);\r\n        director.getScheduler().schedule(this.update, this, 0);\r\n    }\r\n\r\n    private upateLbTime() {\r\n        const battleUI = StormSunderGlobalInstance.instance.battleUI;\r\n        const lbTime = battleUI.getChildByPath('Times/LbTime')!;\r\n        // lbTime.getComponent(Label).string = this.countDownTime.toString();\r\n        const format = GameUtil.formatToTimeString(this.countDownTime);\r\n        lbTime.getComponent(Label).string = format;\r\n    }\r\n\r\n    // 停止倒计时\r\n    private stopCountdown(): void {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = 0;\r\n            GameMgr.inst.isWin = true;\r\n            GameMgr.inst.setGameStatus(GameStatus.End);\r\n        }\r\n    }\r\n\r\n    // update方法，每帧调用\r\n    public update(dt: number): void {\r\n        this.propMgr.update(dt);\r\n    }\r\n\r\n    // 销毁时清理\r\n    public destroy(): void {\r\n        this.stopCountdown();\r\n        director.getScheduler().unscheduleUpdate(this);\r\n    }\r\n}"]}