{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/easy_camera/ThirdPersonCamera.ts"],"names":["_decorator","Component","Node","Vec3","v3","ccclass","property","v3_1","v3_2","ROTATION_STRENGTH","ThirdPersonCamera","_targetLen","_targetAngles","start","len","set","node","eulerAngles","setLenFactor","factor","lenMax","lenMin","setTargetAngles","x","y","z","lateUpdate","deltaTime","target","t","Math","min","tweenTime","lerp","setRotationFromEuler","worldPosition","add","lookAtOffset","forward","multiplyScalar","subtract","setPosition","onCameraRotate","deltaX","deltaY","rotateVHSeparately","abs","onCameraZoom","view"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, v3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst v3_1 = v3();\nconst v3_2 = v3();\n\nconst ROTATION_STRENGTH = 20.0;\n\n@ccclass('tgxThirdPersonCamera')\nexport class ThirdPersonCamera extends Component {\n    @property(Node)\n    target: Node;\n\n    @property\n    lookAtOffset: Vec3 = v3();\n\n    @property\n    zoomSensitivity: number = 1.0;\n\n    @property\n    lenMin: number = 10.0;\n\n    @property\n    lenMax: number = 100.0; //值越大镜头越远\n\n    @property\n    len: number = 5;\n\n    @property\n    rotateVHSeparately: boolean = false;\n\n    @property\n    tweenTime: number = 0.2;\n\n    protected _targetLen: number = 0;\n    protected _targetAngles: Vec3 = v3();\n\n    start() {\n        this._targetLen = this.len;\n        this._targetAngles.set(this.node.eulerAngles);\n    }\n\n    setLenFactor(factor: number) {\n        let len = (this.lenMax - this.lenMin) * factor + this.lenMin;\n        this._targetLen = len;\n    }\n\n    setTargetAngles(x: number, y: number, z: number) {\n        this._targetAngles.set(x, y, z);\n    }\n\n    lateUpdate(deltaTime: number) {\n        if (!this.target) {\n            return;\n        }\n        const t = Math.min(deltaTime / this.tweenTime, 1.0);\n        //rotation\n        v3_1.set(this.node.eulerAngles);\n        Vec3.lerp(v3_1, v3_1, this._targetAngles, t);\n        this.node.setRotationFromEuler(v3_1);\n\n        //lookat\n        v3_1.set(this.target.worldPosition);\n        v3_1.add(this.lookAtOffset);\n\n        //len and position\n        this.len = this.len * (1.0 - t) + this._targetLen * t;\n        v3_2.set(this.node.forward);\n        v3_2.multiplyScalar(this.len);\n\n        v3_1.subtract(v3_2);\n        this.node.setPosition(v3_1);\n    }\n\n    onCameraRotate(deltaX: number, deltaY: number) {\n        let eulerAngles = this.node.eulerAngles;\n        if (this.rotateVHSeparately) {\n            if (Math.abs(deltaX) > Math.abs(deltaY)) {\n                deltaY = 0;\n            }\n            else {\n                deltaX = 0;\n            }\n        }\n        this._targetAngles.set(eulerAngles.x + deltaX * ROTATION_STRENGTH, eulerAngles.y + deltaY * ROTATION_STRENGTH, eulerAngles.z);\n    }\n\n    onCameraZoom(view: number) {\n        // this._targetLen += delta * this.zoomSensitivity;\n        this._targetLen = view;\n        if (this._targetLen < this.lenMin) {\n            this._targetLen = this.lenMin;\n        }\n\n        if (this._targetLen > this.lenMax) {\n            this._targetLen = this.lenMax;\n        }\n    }\n}\n\n"]}