{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/start/Start.ts"],"names":["_decorator","assetManager","Component","director","game","Label","Prefab","PhysicsSystem2D","EPhysics2DDrawFlags","AudioClip","ProgressBar","tgxModuleContext","tgxUIMgr","GameUILayers","GameUILayerNames","ModuleDef","SceneDef","JsonUtil","GtagMgr","GtagType","AdvertMgr","GlobalConfig","GlobalMgr","ccclass","property","_preloadBundles","BASIC","MODULE_STORM_SUNDER","_preloadRes","bundle","url","type","_loadingText","_totalNum","length","Start","_percent","_numCurrentLoaded","onLoad","instance","initilize","isDebug","showInterstitial","start","debugDrawFlags","Aabb","Pair","CenterOfMass","Joint","Shape","setDefaultModule","frameRate","inst","setup","uiCanvasPrefab","NUM","preloadBundle","init","loadConfig","doGameDot","game_start","loadCustom","Promise","resolve","reject","loadDirAsync","onResLoaded","idx","loadBundle","err","console","log","preloadRes","res","getBundle","onComplete","onPreloadingComplete","preload","preloadScene","ROOSTER_STORMSUNDER","info","entryScene","loadScene","hideAll","update","deltaTime","txtLoading","string","Math","floor","totalTime","loadingBar","progress"],"mappings":"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","sourcesContent":["import { _decorator, assetManager, Component, director, game, Label, Prefab, Node, AssetManager, Asset, PhysicsSystem, PhysicsSystem2D, EPhysics2DDrawFlags, AudioClip, ProgressBar } from 'cc';\r\nimport { tgxModuleContext, tgxUIMgr, tgxUITips, tgxUIWaiting } from '../core_tgx/tgx';\r\nimport { GameUILayers, GameUILayerNames } from '../scripts/GameUILayers';\r\n\r\nimport { ModuleDef } from '../scripts/ModuleDef';\r\nimport { SceneDef } from '../scripts/SceneDef';\r\nimport { JsonUtil } from '../core_tgx/base/utils/JsonUtil';\r\nimport { GtagMgr, GtagType } from '../core_tgx/base/GtagMgr';\r\nimport { AdvertMgr } from '../core_tgx/base/ad/AdvertMgr';\r\nimport { GlobalConfig } from './Config/GlobalConfig';\r\nimport { GlobalMgr } from '../scripts/GlobalMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst _preloadBundles = [ModuleDef.BASIC, ModuleDef.MODULE_STORM_SUNDER];\r\n\r\nconst _preloadRes = [\r\n    { bundle: ModuleDef.BASIC, url: 'ui_alert/UI_Alert', type: 'prefab' },\r\n    { bundle: ModuleDef.BASIC, url: 'ui_tips/UI_Tips', type: 'prefab' },\r\n    { bundle: ModuleDef.BASIC, url: 'ui_waiting/UI_Waiting', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Prefabs/Map', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Prefabs/Map1', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Prefabs/Blood', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Prefabs/PlayerInfo', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Prefabs/ExpProp', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Prefabs/Levels/lvl_1', type: 'prefab' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/bgm_1.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/bgm_2.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/dianji.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/luosi.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/shengli.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/shibai.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/yidong.mp3', type: 'audio' },\r\n    { bundle: ModuleDef.MODULE_STORM_SUNDER, url: 'Audio/zhuangche.mp3', type: 'audio' },\r\n];\r\n\r\nconst _loadingText = ['Loading.', 'Loading..', 'Loading...'];\r\nconst _totalNum = _preloadBundles.length + _preloadRes.length + 1;\r\n\r\n@ccclass('Start')\r\nexport class Start extends Component {\r\n    @property(Label)\r\n    txtLoading: Label;\r\n\r\n    @property(Prefab)\r\n    uiCanvasPrefab: Prefab;\r\n\r\n    // @property(Node)\r\n    // loadingBar: Node;\r\n\r\n    @property(ProgressBar)\r\n    loadingBar: ProgressBar = null!;\r\n\r\n    private _percent: string = '';\r\n    private _numCurrentLoaded = 0;\r\n\r\n    protected onLoad(): void {\r\n        GlobalMgr.instance.initilize();\r\n        // GlobalMgr.instance.timeTest();\r\n\r\n        AdvertMgr.instance.initilize();\r\n        if (!GlobalConfig.isDebug) {\r\n            AdvertMgr.instance.showInterstitial();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb |\r\n            EPhysics2DDrawFlags.Pair |\r\n            EPhysics2DDrawFlags.CenterOfMass |\r\n            EPhysics2DDrawFlags.Joint |\r\n            EPhysics2DDrawFlags.Shape;\r\n\r\n        PhysicsSystem2D.instance.debugDrawFlags = 0; // 启用调试绘制\r\n\r\n        tgxModuleContext.setDefaultModule(ModuleDef.BASIC);\r\n\r\n        game.frameRate = 60;\r\n        tgxUIMgr.inst.setup(this.uiCanvasPrefab, GameUILayers.NUM, GameUILayerNames);\r\n\r\n        this.preloadBundle(0);\r\n        GtagMgr.inst.init();\r\n        this.loadConfig();\r\n        GtagMgr.inst.doGameDot(GtagType.game_start);\r\n    }\r\n\r\n    async loadConfig() {\r\n        await this.loadCustom();\r\n    }\r\n\r\n    loadCustom() {\r\n        return new Promise(async (resolve, reject) => {\r\n            await JsonUtil.loadDirAsync();\r\n            resolve(null);\r\n        });\r\n    }\r\n\r\n    onResLoaded() {\r\n        this._numCurrentLoaded++;\r\n        this._percent = ~~(this._numCurrentLoaded / _totalNum * 100) + '%';\r\n    }\r\n\r\n    preloadBundle(idx: number) {\r\n        assetManager.loadBundle(_preloadBundles[idx], null, (err, bundle) => {\r\n            console.log('module:<' + _preloadBundles[idx] + '>loaded.');\r\n            idx++;\r\n            this.onResLoaded();\r\n            if (idx < _preloadBundles.length) {\r\n                this.preloadBundle(idx);\r\n            }\r\n            else {\r\n                this.preloadRes(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    preloadRes(idx: number) {\r\n        let res = _preloadRes[idx];\r\n        // console.log('预加载资源：' + res.url);\r\n        let bundle = assetManager.getBundle(res.bundle);\r\n\r\n        let onComplete = () => {\r\n            idx++;\r\n            this.onResLoaded();\r\n            if (idx < _preloadRes.length) {\r\n                this.preloadRes(idx);\r\n            }\r\n            else {\r\n                this.onPreloadingComplete();\r\n            }\r\n        }\r\n        if (bundle) {\r\n            if (res.type == 'prefab') {\r\n                bundle.preload(res.url, Prefab, onComplete);\r\n            } else if (res.type == 'audio') {\r\n                bundle.preload(res.url, AudioClip, onComplete);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPreloadingComplete() {\r\n        let bundle = assetManager.getBundle(ModuleDef.MODULE_STORM_SUNDER);\r\n        bundle.preloadScene(SceneDef.ROOSTER_STORMSUNDER, () => {\r\n            this.onResLoaded();\r\n            // director.loadScene(SceneDef.MAIN_MENU);\r\n\r\n            const info = {\r\n                bundle: 'module_storm_sunder',\r\n                entryScene: 'rooster_stormsunder'\r\n            }\r\n            // tgxUIWaiting.show();\r\n            assetManager.loadBundle(info.bundle, (err, bundle: AssetManager.Bundle) => {\r\n                if (bundle) {\r\n                    director.loadScene(info.entryScene, () => {\r\n                        tgxUIMgr.inst.hideAll();\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this._percent) {\r\n            this.txtLoading.string = 'Loading...' + this._percent;\r\n        }\r\n        else {\r\n            let idx = Math.floor(game.totalTime / 1000) % 3;\r\n            this.txtLoading.string = _loadingText[idx];\r\n        }\r\n        // this.loadingBar.setScale(this._numCurrentLoaded / _totalNum, 1, 1);\r\n        this.loadingBar.progress = this._numCurrentLoaded / _totalNum;\r\n    }\r\n}\r\n\r\n\r\n"]}