{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/module_storm_sunder/Prefabs/UI/Result/UI_BattleResult_Impl.ts"],"names":["UI_BattleResult_Impl","tween","v3","Vec3","tgxModuleContext","GameUILayers","UI_BattleResult","Layout_BattleResult","StormSunderAudioMgr","GameMgr","GameStatus","PlayerMgr","AttributeBonusMgr","GlobalConfig","AdvertMgr","constructor","POPUP","win","rank","reward","rewardMultiple","getRes","onCreated","initReward","soundId","playOneShot","getMusicIdName","layout","onButtonEvent","btNextAd","onClickReward","btGet","btRestart","onClickRestart","winNode","active","loseNode","rotationLight","updateInfoUI","userModel","inst","isWin","getPlayerRank","totalLevel","Object","values","bonusData","reduce","sum","bonus","level","rewardDevelop","Number","game_reward_develop","toFixed","rewardRank","game_reward_rank","Math","floor","game_pass_reward_multiple","lbUserRank","lbReward","lbMultiple","lbGet","string","light","eulerAngles","repeatForever","to","easing","call","start","changeGameStatus","status","setGameStatus","node","removeFromParent","destroy","multiple","isDebug","instance","showReawardVideo","addMoney","None","attachImplClass"],"mappings":"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","sourcesContent":["import { isValid, Label, tween, v3, Vec3, Node, Tween } from \"cc\";\nimport { tgxModuleContext } from \"../../../../core_tgx/tgx\";\nimport { GameUILayers } from \"../../../../scripts/GameUILayers\";\nimport { UI_BattleResult } from \"../../../../scripts/UIDef\";\nimport { Layout_BattleResult } from \"./Layout_BattleResult\";\nimport { GameEvent } from \"../../../Script/Enum/GameEvent\";\nimport { StormSunderAudioMgr } from \"../../../Script/Manager/StormSunderAudioMgr\";\nimport { GameMgr, GameStatus } from \"../../../Script/Manager/GameMgr\";\nimport { PlayerMgr } from \"../../../Script/Manager/PlayerMgr\";\nimport { AttributeBonusMgr } from \"../../../Script/Manager/AttributeBonusMgr\";\nimport { EventDispatcher } from \"db://assets/core_tgx/easy_ui_framework/EventDispatcher\";\nimport { GlobalConfig } from \"db://assets/start/Config/GlobalConfig\";\nimport { AdvertMgr } from \"db://assets/core_tgx/base/ad/AdvertMgr\";\n\nexport class UI_BattleResult_Impl extends UI_BattleResult {\n    win: boolean = true;\n    rank: number = -1;\n    reward: number = 0;\n\n    //广告奖励倍数\n    rewardMultiple: number = 1;\n\n    constructor() {\n        super('Prefabs/UI/Result/UI_BattleResult', GameUILayers.POPUP, Layout_BattleResult);\n    }\n\n    public getRes(): [] {\n        return [];\n    }\n\n    protected onCreated(): void {\n        this.initReward();\n\n        const soundId = this.win ? 6 : 7;\n        StormSunderAudioMgr.playOneShot(StormSunderAudioMgr.getMusicIdName(soundId), 1.0);\n\n        let layout = this.layout as Layout_BattleResult;\n        this.onButtonEvent(layout.btNextAd, () => {\n            this.onClickReward(this.rewardMultiple);\n        });\n        this.onButtonEvent(layout.btGet, () => {\n            this.onClickReward();\n        });\n        this.onButtonEvent(layout.btRestart, () => {\n            this.onClickRestart();\n        });\n\n        layout.winNode.active = this.win;\n        layout.loseNode.active = !this.win;\n\n        this.rotationLight();\n        this.updateInfoUI();\n    }\n\n    //计算奖励\n    private initReward(): void {\n        const userModel = AttributeBonusMgr.inst.userModel;\n        this.win = GameMgr.inst.isWin;\n        this.rank = PlayerMgr.inst.getPlayerRank();\n\n        const totalLevel = Object.values(userModel.bonusData).reduce((sum, bonus) => sum + bonus.level, 0);\n        const rewardDevelop = Number((userModel.game_reward_develop / 100).toFixed(2));\n        const rewardRank = Number((userModel.game_reward_rank / 100).toFixed(2));\n        //最终奖励=[基础奖励×（1+属性提升值×属性养成加成）]×[1-(本局排名-1)×排名减益]\n        this.reward = Math.floor(userModel.game_reward_develop * (1 + totalLevel * rewardDevelop) * (1 - (this.rank - 1) * rewardRank));\n\n        this.rewardMultiple = userModel.game_pass_reward_multiple;\n    }\n\n    private updateInfoUI(): void {\n        const { lbUserRank, lbReward, lbMultiple, lbGet } = this.layout;\n        lbUserRank.string = `${this.rank}`;\n        lbReward.string = `${this.reward}`;\n        lbMultiple.string = `x ${this.rewardMultiple}`;\n        lbGet.string = `${this.reward}`;\n    }\n\n    private rotationLight(): void {\n        if (!this.win) return;\n        const { light } = this.layout;\n        light.eulerAngles = v3(0, 0, 0);\n        tween(light)\n            .repeatForever(\n                tween()\n                    .to(5, { eulerAngles: new Vec3(0, 0, 360) }, { easing: 'linear' })\n                    .call(() => {\n                        light!.eulerAngles = new Vec3(0, 0, 0);\n                    })\n            )\n            .start();\n    }\n\n    private changeGameStatus(status: GameStatus): void {\n        GameMgr.inst.setGameStatus(status);\n        this.node.removeFromParent();\n        this.node.destroy();\n    }\n\n    private onClickReward(multiple?: number): void {\n        if (multiple) {\n            if (!GlobalConfig.isDebug) {\n                AdvertMgr.instance.showReawardVideo(() => {\n                    const reward = this.reward * multiple;\n                    AttributeBonusMgr.inst.addMoney(reward);\n                    this.changeGameStatus(GameStatus.None);\n                })\n            } else {\n                const reward = this.reward * multiple;\n                AttributeBonusMgr.inst.addMoney(reward);\n                this.changeGameStatus(GameStatus.None);\n            }\n        } else {\n            AttributeBonusMgr.inst.addMoney(this.reward);\n            this.changeGameStatus(GameStatus.None);\n        }\n    }\n\n    private onClickRestart(): void {\n        this.changeGameStatus(GameStatus.None);\n    }\n}\n\ntgxModuleContext.attachImplClass(UI_BattleResult, UI_BattleResult_Impl);"]}