{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/base/ResourceMgr.ts"],"names":["ResItem","ResourceMgr","resources","url","isLoading","callbackArr","loadingQueue","inst","_inst","loadRes","type","callback","cache","get","setTimeout","loadingItem","push","load","err","asset","k","cb"],"mappings":";;;6EAEMA,O,EAMOC,W;;;;;;;;;AARiBC,MAAAA,S,OAAAA,S;;;;;;;;;AAExBF,MAAAA,O,GAAN,MAAMA,OAAN,CAAc;AAAA;AAAA,eACHG,GADG;AAAA,eAEHC,SAFG,GAES,KAFT;AAAA,eAGHC,WAHG,GAGW,EAHX;AAAA;;AAAA,O;;6BAMDJ,W,GAAN,MAAMA,WAAN,CAAkB;AAAA;AAAA,eASbK,YATa,GASK,EATL;AAAA;;AAEC,mBAAJC,IAAI,GAAgB;AAClC,cAAI,CAAC,KAAKC,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,IAAIP,WAAJ,EAAb;AACH;;AACD,iBAAO,KAAKO,KAAZ;AACH;;AAIMC,QAAAA,OAAO,CAAIN,GAAJ,EAAiBO,IAAjB,EAA4BC,QAA5B,EAAgE;AAC1E,cAAIC,KAAK,GAAGV,SAAS,CAACW,GAAV,CAAcV,GAAd,EAAkBO,IAAlB,CAAZ;;AACA,cAAGE,KAAH,EAAS;AACL,gBAAGD,QAAH,EAAY;AACRG,cAAAA,UAAU,CAAC,MAAI;AACXH,gBAAAA,QAAQ,CAAC,IAAD,EAAMC,KAAN,CAAR;AACH,eAFS,EAER,EAFQ,CAAV;AAGH;;AACD;AACH;;AACD,cAAIG,WAAmB,GAAG,KAAKT,YAAL,CAAkBH,GAAlB,CAA1B;;AACA,cAAG,CAACY,WAAJ,EAAgB;AACZA,YAAAA,WAAW,GAAG,KAAKT,YAAL,CAAkBH,GAAlB,IAAyB,IAAIH,OAAJ,EAAvC;AACAe,YAAAA,WAAW,CAACZ,GAAZ,GAAkBA,GAAlB;AACH;;AACDY,UAAAA,WAAW,CAACV,WAAZ,CAAwBW,IAAxB,CAA6BL,QAA7B;;AACA,cAAG,CAACI,WAAW,CAACX,SAAhB,EAA0B;AACtBW,YAAAA,WAAW,CAACX,SAAZ,GAAwB,IAAxB;AACAF,YAAAA,SAAS,CAACe,IAAV,CAAed,GAAf,EAAoBO,IAApB,EAA0B,CAACQ,GAAD,EAAKC,KAAL,KAAmB;AACzC,qBAAO,KAAKb,YAAL,CAAkBH,GAAlB,CAAP;;AACA,mBAAI,IAAIiB,CAAR,IAAaL,WAAW,CAACV,WAAzB,EAAqC;AACjC,oBAAIgB,EAAE,GAAGN,WAAW,CAACV,WAAZ,CAAwBe,CAAxB,CAAT;;AACA,oBAAGC,EAAH,EAAM;AACFA,kBAAAA,EAAE,CAACH,GAAD,EAAKC,KAAL,CAAF;AACH;AACJ;AACJ,aARD;AASH;AACJ;;AAvCoB,O;;AAAZlB,MAAAA,W,CACMO,K,GAAqB,I","sourcesContent":["import { loader, Constructor, resources, Asset } from \"cc\";\n\nclass ResItem {\n    public url: string;\n    public isLoading = false;\n    public callbackArr = [];\n}\n\nexport class ResourceMgr {\n    private static _inst: ResourceMgr = null;\n    public static get inst(): ResourceMgr {\n        if (!this._inst) {\n            this._inst = new ResourceMgr();\n        }\n        return this._inst;\n    }\n\n    private loadingQueue:[] = [];\n\n    public loadRes<T>(url: string, type: any, callback: (err, assets: T) => void) {\n        let cache = resources.get(url,type) as any;\n        if(cache){\n            if(callback){\n                setTimeout(()=>{\n                    callback(null,cache);\n                },10);\n            }\n            return;\n        }\n        let loadingItem:ResItem = this.loadingQueue[url];\n        if(!loadingItem){\n            loadingItem = this.loadingQueue[url] = new ResItem();\n            loadingItem.url = url;\n        }\n        loadingItem.callbackArr.push(callback);\n        if(!loadingItem.isLoading){\n            loadingItem.isLoading = true;\n            resources.load(url, type, (err,asset:Asset)=>{\n                delete this.loadingQueue[url];\n                for(let k in loadingItem.callbackArr){\n                    let cb = loadingItem.callbackArr[k];\n                    if(cb){\n                        cb(err,asset);\n                    }\n                }\n            });\n        }\n    }\n}"]}