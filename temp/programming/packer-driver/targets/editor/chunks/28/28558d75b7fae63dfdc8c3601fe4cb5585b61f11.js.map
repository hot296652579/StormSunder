{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/module_basic/table/Tableai_config.ts"],"names":["Tableai_config","JsonUtil","data","id","init","table","get","TableName","text","range","move_judge","move_time","escape_time","pursuit_1","pursuit_2","pursuit_time","weight"],"mappings":";;;wCAGaA,c;;;;;;;;;;;;;;AAFJC,MAAAA,Q,iBAAAA,Q;;;;;;;gCAEID,c,GAAN,MAAMA,cAAN,CAAqB;AAAA;AAAA,eAGhBE,IAHgB;;AAWxB;AAXwB,eAYxBC,EAZwB,GAYX,CAZW;AAAA;;AAKxBC,QAAAA,IAAI,CAACD,EAAD,EAAa;AACb,gBAAME,KAAK,GAAG;AAAA;AAAA,oCAASC,GAAT,CAAaN,cAAc,CAACO,SAA5B,CAAd;AACA,eAAKL,IAAL,GAAYG,KAAK,CAACF,EAAD,CAAjB;AACA,eAAKA,EAAL,GAAUA,EAAV;AACH;;AAKD;AACQ,YAAJK,IAAI,GAAW;AACf,iBAAO,KAAKN,IAAL,CAAUM,IAAjB;AACH;AACD;;;AACS,YAALC,KAAK,GAAW;AAChB,iBAAO,KAAKP,IAAL,CAAUO,KAAjB;AACH;AACD;;;AACc,YAAVC,UAAU,GAAW;AACrB,iBAAO,KAAKR,IAAL,CAAUQ,UAAjB;AACH;AACD;;;AACa,YAATC,SAAS,GAAQ;AACjB,iBAAO,KAAKT,IAAL,CAAUS,SAAjB;AACH;AACD;;;AACe,YAAXC,WAAW,GAAQ;AACnB,iBAAO,KAAKV,IAAL,CAAUU,WAAjB;AACH;AACD;;;AACa,YAATC,SAAS,GAAW;AACpB,iBAAO,KAAKX,IAAL,CAAUW,SAAjB;AACH;AACD;;;AACa,YAATC,SAAS,GAAW;AACpB,iBAAO,KAAKZ,IAAL,CAAUY,SAAjB;AACH;AACD;;;AACgB,YAAZC,YAAY,GAAQ;AACpB,iBAAO,KAAKb,IAAL,CAAUa,YAAjB;AACH;AACD;;;AACU,YAANC,MAAM,GAAW;AACjB,iBAAO,KAAKd,IAAL,CAAUc,MAAjB;AACH;;AAjDuB,O;;AAAfhB,MAAAA,c,CACFO,S,GAAoB,W","sourcesContent":["\nimport { JsonUtil } from \"db://assets/core_tgx/base/utils/JsonUtil\";\n\nexport class Tableai_config {\n    static TableName: string = \"ai_config\";\n\n    private data: any;\n\n    init(id: number) {\n        const table = JsonUtil.get(Tableai_config.TableName);\n        this.data = table[id];\n        this.id = id;\n    }\n\n    /** 编号【KEY】 */\n    id: number = 0;\n\n    /** 备注 */\n    get text(): string {\n        return this.data.text;\n    }\n    /** 检测半径 */\n    get range(): number {\n        return this.data.range;\n    }\n    /** 移动概率 */\n    get move_judge(): number {\n        return this.data.move_judge;\n    }\n    /** 移动周期 */\n    get move_time(): any {\n        return this.data.move_time;\n    }\n    /** 逃跑周期 */\n    get escape_time(): any {\n        return this.data.escape_time;\n    }\n    /** 追击概率 */\n    get pursuit_1(): number {\n        return this.data.pursuit_1;\n    }\n    /** 二次判读追击概率 */\n    get pursuit_2(): number {\n        return this.data.pursuit_2;\n    }\n    /** 追击周期 */\n    get pursuit_time(): any {\n        return this.data.pursuit_time;\n    }\n    /** 匹配权重 */\n    get weight(): number {\n        return this.data.weight;\n    }\n}\n    "]}