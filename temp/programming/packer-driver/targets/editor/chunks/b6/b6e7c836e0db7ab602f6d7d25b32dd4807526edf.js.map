{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/module_storm_sunder/Script/Manager/Effect2DUIMgr.ts"],"names":["Effect2DUIMgr","instantiate","Prefab","Node","UITransform","resLoader","StormSunderGlobalInstance","BloodComponent","PlayerInfoComponent","GameUtil","ExpPropComponent","bloodMap","Map","playerInfoMap","Instance","_instance","inst","showBlood","target","hpPercent","bloodUI","instance","has","existing","get","bloodComp","getComponent","updateHP","height","console","log","setPlayerInfoPosition","set","bloodPrefab","loadAsync","gameBundleName","bloodNode","parent","error","delete","addPlayerInfo","playerInfo","effectUI","infoPrefab","infoNode","playerInfoComp","updateInfo","parentUI","distance","uiPos","worldToScreenLocal","setPosition","x","y","updatePlayerInfo","addExpProp","exp","expPrefab","expNode","showExp","removeBlood","destroy","removePlayerInfo"],"mappings":"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","sourcesContent":["/** 2dUI 特效 血条 粒子等管理器*/\r\n\r\nimport { assetManager, instantiate, Prefab, Node, UITransform, Vec3, Vec2, view, Game } from \"cc\";\r\nimport { resLoader } from \"db://assets/core_tgx/base/ResLoader\";\r\nimport { StormSunderGlobalInstance } from \"../StormSunderGlobalInstance\";\r\nimport { BloodComponent } from \"../Component/BloodComponent\";\r\nimport { PlayerInfo, PlayerInfoComponent } from \"../Component/PlayerInfoComponent\";\r\nimport { TornadoComponent } from \"../Component/TornadoComponent\";\r\nimport { GameUtil } from \"../GameUtil\";\r\nimport { ExpPropComponent } from \"../Component/ExpPropComponent\";\r\n\r\nexport class Effect2DUIMgr {\r\n    private static _instance: Effect2DUIMgr;\r\n    public static get Instance(): Effect2DUIMgr {\r\n        if (this._instance == null) {\r\n            this._instance = new Effect2DUIMgr();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public static get inst(): Effect2DUIMgr {\r\n        return this.Instance;\r\n    }\r\n\r\n    private bloodMap: Map<Node, Node> = new Map(); // 存储节点与对应血条的映射\r\n    private playerInfoMap: Map<Node, Node> = new Map(); // 存储节点与玩家信息的映射\r\n\r\n    async showBlood(target: Node, hpPercent: number) {\r\n        const bloodUI = StormSunderGlobalInstance.instance.bloodUI;\r\n\r\n        // 1. 使用占位符防止重复创建\r\n        if (this.bloodMap.has(target)) {\r\n            const existing = this.bloodMap.get(target);\r\n            if (existing instanceof Node) {\r\n                const bloodComp = existing.getComponent(BloodComponent);\r\n                if (bloodComp) {\r\n                    bloodComp.updateHP(hpPercent);\r\n                }\r\n\r\n                const height = existing.getComponent(UITransform).height * 20;\r\n\r\n                console.log('height:', height);\r\n                this.setPlayerInfoPosition(existing, target, bloodUI, height);\r\n            }\r\n            return; // 正在加载或已存在\r\n        }\r\n\r\n        // 2. 设置加载占位符\r\n        this.bloodMap.set(target, null);\r\n\r\n        try {\r\n            const bloodPrefab = await resLoader.loadAsync(\r\n                resLoader.gameBundleName,\r\n                \"Prefabs/Blood\",\r\n                Prefab\r\n            );\r\n\r\n            const bloodNode = instantiate(bloodPrefab);\r\n            bloodNode.parent = bloodUI;\r\n\r\n            const bloodComp = bloodNode.getComponent(BloodComponent);\r\n            if (bloodComp) {\r\n                bloodComp.updateHP(hpPercent);\r\n            }\r\n\r\n            const height = bloodNode.getComponent(UITransform).height * 20;\r\n            this.setPlayerInfoPosition(bloodNode, target, bloodUI, height);\r\n            this.bloodMap.set(target, bloodNode);\r\n        } catch (error) {\r\n            // 异常处理：移除占位符允许重试\r\n            this.bloodMap.delete(target);\r\n            console.error(\"加载血条失败:\", error);\r\n        }\r\n    }\r\n\r\n    /** 龙卷风添加信息预设*/\r\n    async addPlayerInfo(target: Node, playerInfo: PlayerInfo) {\r\n        const effectUI = StormSunderGlobalInstance.instance.effectUI;\r\n\r\n        // 1. 使用占位符防止重复创建\r\n        if (this.playerInfoMap.has(target)) {\r\n            const existing = this.playerInfoMap.get(target);\r\n            if (existing instanceof Node) {\r\n                this.setPlayerInfoPosition(existing, target, effectUI);\r\n            }\r\n            return; // 正在加载或已存在\r\n        }\r\n\r\n        // 2. 设置加载占位符\r\n        this.playerInfoMap.set(target, null);\r\n\r\n        try {\r\n            const infoPrefab = await resLoader.loadAsync(\r\n                resLoader.gameBundleName,\r\n                \"Prefabs/PlayerInfo\",\r\n                Prefab\r\n            );\r\n\r\n            const infoNode = instantiate(infoPrefab);\r\n            infoNode.parent = effectUI;\r\n\r\n            const playerInfoComp = infoNode.getComponent(PlayerInfoComponent);\r\n            playerInfoComp?.updateInfo(playerInfo);\r\n\r\n            this.setPlayerInfoPosition(infoNode, target, effectUI);\r\n            this.playerInfoMap.set(target, infoNode);\r\n        } catch (error) {\r\n            // 异常处理：移除占位符允许重试\r\n            this.playerInfoMap.delete(target);\r\n            console.error(\"加载玩家信息失败:\", error);\r\n        }\r\n    }\r\n\r\n    private setPlayerInfoPosition(infoNode: Node, target: Node, parentUI: Node, distance = 150) {\r\n        const uiPos = GameUtil.worldToScreenLocal(target, parentUI);\r\n        infoNode.setPosition(uiPos.x, uiPos.y + distance);\r\n    }\r\n\r\n    //更新对应玩家信息\r\n    updatePlayerInfo(target: Node, playerInfo: PlayerInfo) {\r\n        const infoNode = this.playerInfoMap.get(target);\r\n        if (infoNode) {\r\n            const playerInfoComp = infoNode.getComponent(PlayerInfoComponent);\r\n            if (playerInfoComp) {\r\n                playerInfoComp.updateInfo(playerInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    //目标节点添加经验渐隐显示\r\n    async addExpProp(target: Node, exp: number) {\r\n        const expPrefab = await resLoader.loadAsync(\r\n            resLoader.gameBundleName,\r\n            \"Prefabs/ExpProp\",\r\n            Prefab\r\n        );\r\n\r\n        if (expPrefab) {\r\n            const expNode = instantiate(expPrefab);\r\n            const effectUI = StormSunderGlobalInstance.instance.effectUI;\r\n            expNode.parent = effectUI;\r\n\r\n            this.setPlayerInfoPosition(expNode, target, effectUI, 0);\r\n            expNode.getComponent(ExpPropComponent).showExp(exp);\r\n            // console.log(\"targetLocal:\", targetLocal);\r\n        }\r\n    }\r\n\r\n    // 清理血条\r\n    removeBlood(target: Node) {\r\n        const bloodNode = this.bloodMap.get(target);\r\n        if (bloodNode) {\r\n            bloodNode.destroy();\r\n            this.bloodMap.delete(target);\r\n        }\r\n    }\r\n\r\n    // 清理玩家信息节点\r\n    removePlayerInfo(target: Node) {\r\n        const infoNode = this.playerInfoMap.get(target);\r\n        if (infoNode) {\r\n            infoNode.destroy();\r\n            this.playerInfoMap.delete(target);\r\n        }\r\n    }\r\n}\r\n\r\n"]}