{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/easy_adapter/Adapter.ts"],"names":["Adapter","_decorator","Component","UITransform","size","screen","view","v4","EDITOR","JSB","ccclass","property","DeviceDirection","SAFE_SIZE","OUTSIDE_SIZE","_func","onAdapterComplete","_isFullScreenAdaption","width","value","trans","getComponent","height","windowSize","getDesignResolutionSize","visibleSize","getVisibleSize","doOnAdapterComplete","onLoad","onChangeSize","onEnable","addEvents","onDisable","removeEvents","onDestroy","bind","window","addEventListener","removeEventListener","direction","str","result","Unknown","orientation","jsb","device","getDeviceOrientation","undefined","LandscapeLeft","LandscapeRight","Portrait","UpsideDown","safeAreaEdge","getSafeAreaEdge","safeArea","_safeArea","screenPxToDesignPx","screenPx","designPxToScreenPxRatio","designPxToScreenPx","designPx","screenWidth","screenHeight","designWidth","designHeight","Math","min","y","w","x","z","outside","safe","isFullScreenAdaption"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, UITransform, size, Size, screen, view, v4 } from 'cc';\r\nimport { EDITOR, JSB } from 'cc/env';\r\nconst { ccclass, property } = _decorator;\r\n/**\r\n * @description 该适配方案参考 https://forum.cocos.org/t/cocos-creator/74001\r\n */\r\n\r\n/**\r\n * 屏幕分辨率下 的像素值\r\n */\r\ninterface SafeArea {\r\n    /**\r\n     * 屏幕分辨率下：画布（屏幕)宽度\r\n     */\r\n    width: number;\r\n\r\n    /**\r\n     * 屏幕分辨率下：画布（屏幕）高度\r\n     */\r\n    height: number;\r\n\r\n    /**@description 屏幕分辨率下：安全区域大小(像素) */\r\n    safe: Size;\r\n\r\n    /**@description 「设计分辨率」 非安全区域的大小(像素)即刘海单边的大小 */\r\n    outside: Size;\r\n\r\n    /**\r\n     * 「设计分辨率」像素值转换到 「屏幕分辨率」 下的像素比\r\n     *\r\n     * e.g.\r\n     *\r\n     * * screenPx = designPx * pixelRatio\r\n     * * designPx = screenPx / pixelRatio\r\n     */\r\n    designPxToScreenPxRatio: number;\r\n}\r\n\r\n/**@description 设备方向 */\r\nenum DeviceDirection {\r\n    /**@description 未知*/\r\n    Unknown,\r\n    /**@description 横屏(即摄像头向左) */\r\n    LandscapeLeft,\r\n    /**@description 横屏(即摄像头向右) */\r\n    LandscapeRight,\r\n    /**@description 竖屏(即摄像头向上) */\r\n    Portrait,\r\n    /**@description 竖屏(即摄像头向下) */\r\n    UpsideDown,\r\n}\r\n\r\nlet SAFE_SIZE = size(0, 0);\r\nlet OUTSIDE_SIZE = size(0, 0);\r\nexport class Adapter extends Component {\r\n\r\n    static direction = DeviceDirection;\r\n\r\n    protected set width(value: number) {\r\n        let trans = this.getComponent(UITransform);\r\n        if (!trans) {\r\n            return;\r\n        }\r\n        trans.width = value;\r\n    }\r\n    protected get width() {\r\n        let trans = this.getComponent(UITransform);\r\n        if (!trans) {\r\n            return 0;\r\n        }\r\n        return trans.width;\r\n    }\r\n\r\n    protected set height(value: number) {\r\n        let trans = this.getComponent(UITransform);\r\n        if (!trans) {\r\n            return;\r\n        }\r\n        trans.height = value;\r\n    }\r\n\r\n    protected get height() {\r\n        let trans = this.getComponent(UITransform);\r\n        if (!trans) {\r\n            return 0;\r\n        }\r\n        return trans.height;\r\n    }\r\n\r\n    protected static get windowSize() {\r\n        if (EDITOR) {\r\n            return view.getDesignResolutionSize();\r\n        }\r\n        return screen.windowSize;\r\n    }\r\n\r\n    protected static get visibleSize() {\r\n        return view.getVisibleSize();\r\n    }\r\n\r\n    protected _func: any = null;\r\n\r\n    /**@description 适配完成回调 */\r\n    onAdapterComplete: () => void = null!;\r\n\r\n    protected doOnAdapterComplete() {\r\n        if (this.onAdapterComplete) {\r\n            this.onAdapterComplete();\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        super.onLoad && super.onLoad();\r\n        this.onChangeSize();\r\n    }\r\n\r\n    onEnable() {\r\n        super.onEnable && super.onEnable();\r\n        this.addEvents();\r\n    }\r\n\r\n    onDisable() {\r\n        this.removeEvents();\r\n        super.onDisable && super.onDisable();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeEvents();\r\n        super.onDestroy && super.onDestroy();\r\n    }\r\n\r\n    protected addEvents() {\r\n        if (this._func) {\r\n            return;\r\n        }\r\n        this._func = this.onChangeSize.bind(this);\r\n        window.addEventListener(\"resize\", this._func);\r\n        window.addEventListener(\"orientationchange\", this._func);\r\n    }\r\n\r\n    protected removeEvents() {\r\n        if (this._func) {\r\n            window.removeEventListener(\"resize\", this._func);\r\n            window.removeEventListener(\"orientationchange\", this._func);\r\n        }\r\n        this._func = null;\r\n    }\r\n\r\n    /**\r\n     * @description 视图发生大小变化\r\n     */\r\n    protected onChangeSize() {\r\n        this.doOnAdapterComplete();\r\n    }\r\n\r\n    /**@description 获取当前设备方向 */\r\n    get direction() {\r\n        let str = \"未知\"\r\n        let result = DeviceDirection.Unknown;\r\n        let orientation = window.orientation;\r\n        if (JSB) {\r\n            orientation = jsb.device.getDeviceOrientation();\r\n        }\r\n        if (orientation != undefined || orientation != null) {\r\n            if (orientation == 90) {\r\n                str = `横屏向左`\r\n                result = DeviceDirection.LandscapeLeft;\r\n            } else if (orientation == -90) {\r\n                str = `横屏向右`\r\n                result = DeviceDirection.LandscapeRight;\r\n            } else if (orientation == 0) {\r\n                str = \"竖屏向上\"\r\n                result = DeviceDirection.Portrait;\r\n            } else if (orientation == 180) {\r\n                str = \"竖屏向下\"\r\n                result = DeviceDirection.UpsideDown;\r\n            }\r\n        }\r\n        // console.log(`当前设备方向:${str}`)\r\n        return result;\r\n    }\r\n\r\n    static get safeAreaEdge() {\r\n        if (JSB) {\r\n            return jsb.device.getSafeAreaEdge();\r\n        } else {\r\n            return v4(0, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n    private static _safeArea: SafeArea = null!;\r\n\r\n    static set safeArea(value: SafeArea) {\r\n        this._safeArea = value as any;\r\n    }\r\n\r\n    static screenPxToDesignPx(screenPx: number) {\r\n        return screenPx / this.safeArea.designPxToScreenPxRatio;\r\n    }\r\n\r\n    static designPxToScreenPx(designPx: number) {\r\n        return designPx * this.safeArea.designPxToScreenPxRatio;\r\n    }\r\n\r\n    /**\r\n     * 基于屏幕尺寸的安全区域\r\n     *\r\n     * 可以通过 screenPxToDesignPx 转换为基于设计画布尺寸的像素大小\r\n     */\r\n    static get safeArea() {\r\n        if (this._safeArea == null || this._safeArea == undefined) {\r\n            // 初始屏幕宽高像素\r\n            let screenWidth = Adapter.windowSize.width;\r\n            let screenHeight = Adapter.windowSize.height;\r\n            // 「设计分辨率」像素值转换到 「屏幕分辨率」 下的像素比\r\n            let designWidth = Adapter.visibleSize.width;\r\n            let designHeight = Adapter.visibleSize.height;\r\n            let designPxToScreenPxRatio = Math.min(screenWidth / designWidth, screenHeight / designHeight);\r\n\r\n            OUTSIDE_SIZE.width = 0\r\n            OUTSIDE_SIZE.height = 0\r\n            SAFE_SIZE.width = screenWidth - OUTSIDE_SIZE.width;\r\n            SAFE_SIZE.height = screenHeight - OUTSIDE_SIZE.height\r\n            if (JSB) {\r\n                OUTSIDE_SIZE.width = (this.safeAreaEdge.y + this.safeAreaEdge.w)\r\n                OUTSIDE_SIZE.height = (this.safeAreaEdge.x + this.safeAreaEdge.z)\r\n                SAFE_SIZE.width = screenWidth - OUTSIDE_SIZE.width;\r\n                SAFE_SIZE.height = screenHeight - OUTSIDE_SIZE.height\r\n                OUTSIDE_SIZE.width = OUTSIDE_SIZE.width / 2\r\n                OUTSIDE_SIZE.height = OUTSIDE_SIZE.height / 2\r\n            }\r\n\r\n            this._safeArea = {\r\n                width: screenWidth,\r\n                height: screenHeight,\r\n                outside: OUTSIDE_SIZE,\r\n                safe: SAFE_SIZE,\r\n                designPxToScreenPxRatio: designPxToScreenPxRatio,\r\n            };\r\n        }\r\n        return this._safeArea;\r\n    }\r\n\r\n    private _isFullScreenAdaption = true;\r\n    /** 是否全屏*/\r\n    public get isFullScreenAdaption() {\r\n        return this._isFullScreenAdaption;\r\n    }\r\n    public set isFullScreenAdaption(value) {\r\n        this._isFullScreenAdaption = value;\r\n    }\r\n}\r\n"]}