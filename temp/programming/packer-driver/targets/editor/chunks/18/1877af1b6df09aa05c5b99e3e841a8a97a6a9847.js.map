{"version":3,"sources":["file:///E:/CocosCreator/StormSunder_Github/StormSunder/assets/core_tgx/base/InputMgr.ts"],"names":["InputMgr","STATE_NORMAL","STATE_KEEP","_flags","_flagsMeta","inst","_inst","setFlag","flag","keep","meta","removeFlag","hasFlag","getMetaByFlag","update","k"],"mappings":";;;iBAAaA,Q;;;;;;;;;;;;;0BAAAA,Q,GAAN,MAAMA,QAAN,CAAc;AAAA;AAAA,eACTC,YADS,GACM,CADN;AAAA,eAETC,UAFS,GAEI,CAFJ;AAAA,eAKTC,MALS,GAKA,EALA;AAAA,eAMTC,UANS,GAMI,EANJ;AAAA;;AAOK,mBAAJC,IAAI,GAAW;AAC7B,cAAG,CAAC,KAAKC,KAAT,EAAe;AACX,iBAAKA,KAAL,GAAa,IAAIN,QAAJ,EAAb;AACH;;AACD,iBAAO,KAAKM,KAAZ;AACH;;AAEMC,QAAAA,OAAO,CAACC,IAAD,EAAaC,IAAb,EAA2BC,IAA3B,EAAqC;AAC/C,eAAKP,MAAL,CAAYK,IAAZ,IAAoBC,IAAI,GAAE,KAAKP,UAAP,GAAkB,KAAKD,YAA/C;;AACA,cAAGS,IAAI,IAAI,IAAX,EAAgB;AACZ,iBAAKN,UAAL,CAAgBI,IAAhB,IAAwBE,IAAxB;AACH;AACJ;;AAEMC,QAAAA,UAAU,CAACH,IAAD,EAAa;AAC1B,iBAAO,KAAKL,MAAL,CAAYK,IAAZ,CAAP;AACH;;AAEMI,QAAAA,OAAO,CAACJ,IAAD,EAAqB;AAC/B,iBAAO,CAAC,CAAC,KAAKL,MAAL,CAAYK,IAAZ,CAAT;AACH;;AAEMK,QAAAA,aAAa,CAACL,IAAD,EAAiB;AACjC,iBAAO,KAAKJ,UAAL,CAAgBI,IAAhB,CAAP;AACH;;AAEMM,QAAAA,MAAM,GAAE;AACX,eAAI,IAAIC,CAAR,IAAa,KAAKZ,MAAlB,EAAyB;AACrB,gBAAG,KAAKA,MAAL,CAAYY,CAAZ,KAAkB,KAAKb,UAA1B,EAAqC;AACjC,mBAAKC,MAAL,CAAYY,CAAZ,IAAiB,CAAjB;AACH;AACJ;AACJ;;AAvCgB,O;;AAARf,MAAAA,Q,CAIMM,K,GAAiB,I","sourcesContent":["export class InputMgr{\n    private STATE_NORMAL = 1;\n    private STATE_KEEP = 2;\n\n    private static _inst:InputMgr = null;\n    private _flags = {};\n    private _flagsMeta = {};\n    public static get inst():InputMgr{\n        if(!this._inst){\n            this._inst = new InputMgr();\n        }\n        return this._inst;\n    }\n\n    public setFlag(flag:string,keep?:boolean,meta?:any){\n        this._flags[flag] = keep? this.STATE_KEEP:this.STATE_NORMAL;\n        if(meta != null){\n            this._flagsMeta[flag] = meta;\n        }\n    }\n\n    public removeFlag(flag:string){\n        delete this._flags[flag];\n    }\n\n    public hasFlag(flag:string):boolean{\n        return !!this._flags[flag];\n    }\n\n    public getMetaByFlag(flag:string):any{\n        return this._flagsMeta[flag];\n    }\n\n    public update(){\n        for(let k in this._flags){\n            if(this._flags[k] != this.STATE_KEEP){\n                this._flags[k] = 0;\n            }\n        }\n    }\n}"]}